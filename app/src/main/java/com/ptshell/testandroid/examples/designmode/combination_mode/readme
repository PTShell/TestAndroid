1.定义
将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。

2.介绍
组合模式属于结构型模式。
组合模式有时叫做部分—整体模式，主要是描述部分与整体的关系。
组合模式实际上就是个树形结构，一棵树的节点如果没有分支，就是叶子节点;如果存在分支，则是树枝节点。
我们平时遇到的最典型的组合结构就是文件和文件夹了，具体的文件就是叶子节点，而文件夹下还可以存在文件和文件夹，
所以文件夹一般是树枝节点。

7. 优点
高层模块（客户端）调用简单。局部和整体都是同样的结构，客户端无需关心是局部还是整体。
新增节点容易。无需对现有类库进行任何修改，符合开闭原则。
8. 缺点
不同的组合模式实现有不同的缺点，具体看上面的分析。

组合模式在Android中最经典的实现就是View和ViewGrounp的嵌套组合。当然这种模式真正需要开发者去实现的并不多。
优点：
(1)可以清楚的定义分层次的复杂对象，表示对象的全部或部分层次，它让高层模块忽略了层次的差异，
方便对整个层次结构进行控制；
(2)高层模块可以一致的使用一个组合结构或其中单个对象，不必关心处理的是单个对象还是整个组合结构，
简化了高层模块的代码；
(3)在组合模式中增加新的枝干构件和叶子构件都很方便，无须对现有类库进行任何修改，符合“开闭原则”；
(4)组合模式为树形结构的面向对象实现提供了一种灵活的解决方案，通过叶子对象和枝干对象的递归组合，
可以形成复杂的树形结构，但对树形结构的控制却非常简单。
缺点：
在新增构件时不好对枝干中的构件类型进行限制，不能依赖类型系统来施加这些约束，因为在大多数情况下，
它们都来自于相同的抽象层，此时，必须及时进行类型检查来实现，这个实现过程较为复杂。

链接：https://www.jianshu.com/p/da2649a56ef0
链接：https://www.jianshu.com/p/0580301d141d