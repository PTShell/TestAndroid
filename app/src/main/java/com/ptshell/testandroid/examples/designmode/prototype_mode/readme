原型模式本质上就是对象的拷贝，与C++中的拷贝构造函数有些类似，
它们之间容易出现的问题也都是深拷贝、浅拷贝。使用原型模式可以解决构建复杂对象的资源消耗问题，
能够在某些场景下提升创建对象的效率。
优点：
(1)原型模式是在内存中二进制流的拷贝，要比直接new一个对象性能好很多，
特别是要在一个循环体内产生大量对象时，原型模式可能更好的体现其优点。
(2)还有一个重要的用途就是保护性拷贝，也就是对某个对象对外可能是只读的，
为了防止外部对这个只读对象的修改，通常可以通过返回一个对象拷贝的形式实现只读的限制。
缺点：
(1)这既是它的优点也是缺点，直接在内存中拷贝，构造函数是不会执行的，
在实际开发中应该注意这个潜在问题。优点是减少了约束，缺点也是减少了约束，需要大家在实际应用时考虑。
(2)通过实现Cloneable接口的原型模式在调用clone函数构造实例时并不一定比通过new操作速度快，
只有当通过new构造对象较为耗时或者说成本较高时，通过clone方法才能够获得效率上的提升。

参考:
链接:https://www.jianshu.com/p/fc5e1edbc80f
链接:https://www.jianshu.com/p/6d1333917ae5