1.定义
为其他对象提供一种代理以控制这个对象的访问。

2.介绍
代理模式属于结构型模式。
代理模式也叫委托模式。
生活中，比如代购、打官司等等，实际上都是一种代理模式。

5.3 静态代理与动态代理比较
静态代理的缺点：

静态代理如果接口新增一个方法，除了所有实现类（真实主题类）需要实现这个方法外，所有代理类也需要实现此方法。
增加了代码维护的复杂度。代理对象只服务于一种类型的对象，如果要服务多类型的对象。
必须要为每一种对象都进行代理，静态代理在程序规模稍大时就无法胜任了。
动态代理的优点：

可以通过一个代理类完成全部的代理功能，接口中声明的所有方法都被转移到调用处理器一个集中的方法中处理
（InvocationHandler.invoke）。当接口方法数量较多时，我们可以进行灵活处理，
而不需要像静态代理那样每一个方法进行中转。
动态代理的应用使我们的类职责更加单一，复用性更强。
动态代理的缺点：

不能对类进行代理，只能对接口进行代理，如果我们的类没有实现任何接口，
那么就不能使用这种方式进行动态代理（因为$Proxy()这个类集成了Proxy,Java的集成不允许出现多个父类）。

7. 优点
代理作为调用者和真实主题的中间层,降低了模块间和系统的耦合性。
可以以一个小对象代理一个大对象,达到优化系统提高运行速度的目的。
代理对象能够控制调用者的访问权限，起到了保护真实主题的作用。
8. 缺点
由于在调用者和真实主题之间增加了代理对象，因此可能会造成请求的处理速度变慢。
实现代理模式需要额外的工作（有些代理模式的实现非常复杂），从而增加了系统实现的复杂度。

链接：https://www.jianshu.com/p/a0e687e0904f